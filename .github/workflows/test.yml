name: Test

on:
  workflow_dispatch:

jobs:
  build: 
    runs-on: ubuntu-latest
    environment: development
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16
         
  validate_config_data:
    runs-on: ubuntu-latest
    needs: build
    environment: development
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16
        
    - name: Upload File and Validate
      id: upload_and_validate
      uses: ./
      #uses: ServiceNow/servicenow-devops-config-validate@v1.0.0-beta
      with:
        instance-url: ${{ secrets.SN_INSTANCE }}
        devops-integration-user-name: ${{ secrets.USERNAME }}
        devops-integration-user-password: ${{ secrets.PASSWORD }}
        application-name: ${{ vars.DEMO_APPLICATION_NAME }}
        target: ${{ vars.TARGET }}
        deployable-name: ${{ vars.DEPLOYABLE_NAME }}
        name-path: ${{ vars.NAME_PATH }}
        auto-commit: ${{ vars.AUTO_COMMIT }}
        auto-validate: ${{ vars.AUTO_VALIDATE }}
        auto-publish: ${{ vars.AUTO_PUBLISH }}
        config-file-path: test/**
        data-format: ${{ vars.DATA_FORMAT }}
        changeset: ${{ vars.CHANGESET }}
        terminate-on-policy-validation-failures: true

    - name: Upload validation results
      if: ${{ success() || (failure() && steps.upload_and_validate.outputs.validation-status != '') }}
      uses: actions/upload-artifact@v2
      with:
        name: validation-results
        path: validation-results.json

    # Use below step for uploading the sarif file
    # - name: Upload SARIF Results
    #   uses: github/codeql-action/upload-sarif@v2
    #   with:
    #     sarif_file: validation-results.sarif
    #     category: ${{ vars.DEPLOYABLE_NAME }}

  deploy_dev:
    runs-on: ubuntu-latest
    needs: validate_config_data
    environment: development

    steps:
        - name: deploy
          run: | 
            echo "deploying to dev"
